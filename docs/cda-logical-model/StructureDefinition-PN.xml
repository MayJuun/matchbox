<?xml version="1.0" encoding="UTF-8"?>

<StructureDefinition xmlns="http://hl7.org/fhir">
  <id value="PN"/>
  <text>
    <status value="generated"/><div xmlns="http://www.w3.org/1999/xhtml">
      <p>A name for a person. A sequence of name parts, such as given name or family name, prefix, suffix, etc. Examples for person name values are &quot;Jim Bob Walton, Jr.&quot;, &quot;Adam Everyman&quot;, etc. A person name may be as simple as a character string or may consist of several person name parts, such as, &quot;Jim&quot;, &quot;Bob&quot;, &quot;Walton&quot;, and &quot;Jr.&quot;. PN differs from EN because the qualifier type cannot include LS (Legal Status).</p>
    </div>
  </text>
  <extension url="http://hl7.org/fhir/tools/StructureDefinition/logical-target">
    <valueBoolean>
      <extension url="http://hl7.org/fhir/StructureDefinition/data-absent-reason">
        <valueCode value="not-applicable"/>
      </extension>
    </valueBoolean>
  </extension>
  <extension url="http://hl7.org/fhir/StructureDefinition/elementdefinition-namespace">
    <valueUri value="urn:hl7-org:v3"/>
  </extension>
  <extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-no-order">
    <valueBoolean value="true"/>
  </extension>
  <url value="http://hl7.org/cda/stds/core/StructureDefinition/PN"/>
  <version value="2.1.0-draft2-mb"/>
  <name value="PN"/>
  <title value="PN: PersonName (V3 Data Type)"/>
  <status value="active"/>
  <experimental value="false"/>
  <date value="2023-10-04T23:00:58+02:00"/>
  <publisher value="Health Level 7"/>
  <contact>
    <name value="HL7 International - Structured Documents"/>
    <telecom>
      <system value="url"/>
      <value value="http://www.hl7.org/Special/committees/structdoc"/>
    </telecom>
    <telecom>
      <system value="email"/>
      <value value="structdog@lists.HL7.org"/>
    </telecom>
  </contact>
  <description value="A name for a person. A sequence of name parts, such as given name or family name, prefix, suffix, etc. Examples for person name values are &quot;Jim Bob Walton, Jr.&quot;, &quot;Adam Everyman&quot;, etc. A person name may be as simple as a character string or may consist of several person name parts, such as, &quot;Jim&quot;, &quot;Bob&quot;, &quot;Walton&quot;, and &quot;Jr.&quot;. PN differs from EN because the qualifier type cannot include LS (Legal Status)."/>
  <fhirVersion value="5.0.0"/>
  <mapping>
    <identity value="rim"/>
    <uri value="http://hl7.org/v3"/>
    <name value="RIM Mapping"/>
  </mapping>
  <kind value="logical"/>
  <abstract value="false"/>
  <type value="http://hl7.org/cda/stds/core/StructureDefinition/PN"/>
  <baseDefinition value="http://hl7.org/cda/stds/core/StructureDefinition/EN"/>
  <derivation value="specialization"/>
  <snapshot>
    <element id="PN">
      <path value="PN"/>
      <short value="Base for all types and resources"/>
      <definition value="A name for a person. A sequence of name parts, such as given name or family name, prefix, suffix, etc. Examples for person name values are &quot;Jim Bob Walton, Jr.&quot;, &quot;Adam Everyman&quot;, etc. A person name may be as simple as a character string or may consist of several person name parts, such as, &quot;Jim&quot;, &quot;Bob&quot;, &quot;Walton&quot;, and &quot;Jr.&quot;. PN differs from EN because the qualifier type cannot include LS (Legal Status)."/>
      <min value="1"/>
      <max value="*"/>
      <base>
        <path value="Base"/>
        <min value="0"/>
        <max value="*"/>
      </base>
      <constraint>
        <key value="ele-1"/>
        <severity value="error"/>
        <human value="All FHIR elements must have a @value or children"/>
        <expression value="hasValue() or (children().count() &gt; id.count())"/>
        <source value="http://hl7.org/fhir/StructureDefinition/Element"/>
      </constraint>
      <constraint>
        <key value="pn-no-ls"/>
        <severity value="error"/>
        <human value="No PN name part may have a qualifier of LS."/>
        <expression value="(delimiter | family | given | prefix | suffix).where(qualifier = 'LS').empty()"/>
      </constraint>
      <isModifier value="false"/>
      <mapping>
        <identity value="rim"/>
        <map value="n/a"/>
      </mapping>
    </element>
    <element id="PN.nullFlavor">
      <path value="PN.nullFlavor"/>
      <representation value="xmlAttr"/>
      <label value="Exceptional Value Detail"/>
      <definition value="If a value is an exceptional value (NULL-value), this specifies in what way and why proper information is missing."/>
      <min value="0"/>
      <max value="1"/>
      <base>
        <path value="ANY.nullFlavor"/>
        <min value="0"/>
        <max value="1"/>
      </base>
      <type>
        <code value="code"/>
        <profile value="http://hl7.org/cda/stds/core/StructureDefinition/cs-simple"/>
      </type>
      <binding>
        <strength value="required"/>
        <valueSet value="http://terminology.hl7.org/ValueSet/v3-NullFlavor"/>
      </binding>
    </element>
    <element id="PN.use">
      <path value="PN.use"/>
      <representation value="xmlAttr"/>
      <label value="Use Code"/>
      <definition value="A set of codes advising a system or user which name in a set of like names to select for a given purpose. A name without specific use code might be a default name useful for any purpose, but a name with a specific use code would be preferred for that respective purpose"/>
      <min value="0"/>
      <max value="*"/>
      <base>
        <path value="EN.use"/>
        <min value="0"/>
        <max value="*"/>
      </base>
      <type>
        <code value="code"/>
        <profile value="http://hl7.org/cda/stds/core/StructureDefinition/cs-simple"/>
      </type>
      <binding>
        <strength value="required"/>
        <valueSet value="http://terminology.hl7.org/ValueSet/v3-EntityNameUse"/>
      </binding>
    </element>
    <element id="PN.delimiter">
      <path value="PN.delimiter"/>
      <min value="0"/>
      <max value="*"/>
      <base>
        <path value="EN.delimiter"/>
        <min value="0"/>
        <max value="*"/>
      </base>
      <type>
        <code value="http://hl7.org/cda/stds/core/StructureDefinition/ENXP"/>
      </type>
    </element>
    <element id="PN.family">
      <path value="PN.family"/>
      <min value="0"/>
      <max value="*"/>
      <base>
        <path value="EN.family"/>
        <min value="0"/>
        <max value="*"/>
      </base>
      <type>
        <code value="http://hl7.org/cda/stds/core/StructureDefinition/ENXP"/>
      </type>
    </element>
    <element id="PN.given">
      <path value="PN.given"/>
      <min value="0"/>
      <max value="*"/>
      <base>
        <path value="EN.given"/>
        <min value="0"/>
        <max value="*"/>
      </base>
      <type>
        <code value="http://hl7.org/cda/stds/core/StructureDefinition/ENXP"/>
      </type>
    </element>
    <element id="PN.prefix">
      <path value="PN.prefix"/>
      <min value="0"/>
      <max value="*"/>
      <base>
        <path value="EN.prefix"/>
        <min value="0"/>
        <max value="*"/>
      </base>
      <type>
        <code value="http://hl7.org/cda/stds/core/StructureDefinition/ENXP"/>
      </type>
    </element>
    <element id="PN.suffix">
      <path value="PN.suffix"/>
      <definition value="Element EN.family"/>
      <min value="0"/>
      <max value="*"/>
      <base>
        <path value="EN.suffix"/>
        <min value="0"/>
        <max value="*"/>
      </base>
      <type>
        <code value="http://hl7.org/cda/stds/core/StructureDefinition/ENXP"/>
      </type>
    </element>
    <element id="PN.xmlText">
      <path value="PN.xmlText"/>
      <representation value="xmlText"/>
      <short value="Allows for mixed text content"/>
      <comment value="This element is represented in XML as textual content. The actual name &quot;xmlText&quot; will not appear in a CDA instance."/>
      <min value="0"/>
      <max value="1"/>
      <base>
        <path value="EN.xmlText"/>
        <min value="0"/>
        <max value="1"/>
      </base>
      <type>
        <code value="string"/>
        <profile value="http://hl7.org/cda/stds/core/StructureDefinition/st-simple"/>
      </type>
    </element>
    <element id="PN.validTime">
      <path value="PN.validTime"/>
      <label value="Valid Time"/>
      <definition value="An interval of time specifying the time during which the name is or was used for the entity. This accomodates the fact that people change names for people, places and things."/>
      <min value="0"/>
      <max value="1"/>
      <base>
        <path value="EN.validTime"/>
        <min value="0"/>
        <max value="1"/>
      </base>
      <type>
        <code value="http://hl7.org/cda/stds/core/StructureDefinition/IVL-TS"/>
      </type>
    </element>
  </snapshot>
  <differential>
    <element id="PN">
      <path value="PN"/>
      <definition value="A name for a person. A sequence of name parts, such as given name or family name, prefix, suffix, etc. Examples for person name values are &quot;Jim Bob Walton, Jr.&quot;, &quot;Adam Everyman&quot;, etc. A person name may be as simple as a character string or may consist of several person name parts, such as, &quot;Jim&quot;, &quot;Bob&quot;, &quot;Walton&quot;, and &quot;Jr.&quot;. PN differs from EN because the qualifier type cannot include LS (Legal Status)."/>
      <min value="1"/>
      <max value="*"/>
      <constraint>
        <key value="pn-no-ls"/>
        <severity value="error"/>
        <human value="No PN name part may have a qualifier of LS."/>
        <expression value="(delimiter | family | given | prefix | suffix).where(qualifier = 'LS').empty()"/>
      </constraint>
    </element>
  </differential>
</StructureDefinition>